name: Release Test

env:
  IMAGE_NAME: activemq-artemis-operator

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install prerequisites
        run: >
          sudo apt-get update &&
          sudo apt-get install pass

      - name: Checkout artemiscloud.github.io
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/artemiscloud.github.io
          path: artemiscloud.github.io
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        run: |
          cd artemiscloud.github.io
          echo "list dir"
          ls
          echo "find tag"
          git tag | grep v1.0.1

          RELEASE_TAG="$(git describe --exact-match --tags)"

          RELEASE_ID=$(curl -v -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${{ github.repository }}/releases/tags/${RELEASE_TAG}" | jq -r '.id')

          if [ -n "$RELEASE_ID" ]; then
            curl -v -L -X DELETE -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${{ github.repository }}/releases/${RELEASE_ID}"
          fi

          RELEASE_ID=$(curl -v -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/${{ github.repository }}/releases" \
            -d "$(jq -c -n --arg tag_name "${RELEASE_TAG}" '{"tag_name":$tag_name,"generate_release_notes":true}')" | jq -r '.id')

          RELEASE_PACKAGE="activemq-artemis-operator-${RELEASE_TAG}"
          INSTALL_YAML="activemq-artemis-operator.yaml"
          rm -rf /tmp/${RELEASE_PACKAGE}
          mkdir -p /tmp/${RELEASE_PACKAGE}
          cp -r deploy/* /tmp/${RELEASE_PACKAGE}
          cp -r config/crs /tmp/${RELEASE_PACKAGE}
          cp -r examples /tmp/${RELEASE_PACKAGE}
          cd /tmp/${RELEASE_PACKAGE}
          zip -r /tmp/${RELEASE_PACKAGE}.zip .

          curl -v -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" -H "Content-Type: application/octet-stream" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${RELEASE_ID}/assets?name=${RELEASE_PACKAGE}.zip" --data-binary "@/tmp/${RELEASE_PACKAGE}.zip"

          curl -v -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" -H "Content-Type: application/octet-stream" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${RELEASE_ID}/assets?name=${INSTALL_YAML}" --data "@/tmp/${INSTALL_YAML}"
