name: Update

env:
  IMAGE_NAME: activemq-artemis-broker

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version, i.e. 1.0.0'
        required: false
        default: '*.*.+'
        type: string
      update_version:
        description: 'Update version'
        required: true
        default: true
        type: boolean
      trigger_release:
        description: 'Trigger release'
        required: false
        default: true
        type: boolean

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.3'

      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Set up Operator SDK
        run: >
          export ARCH=$(case $(uname -m) in x86_64) echo -n amd64 ;; aarch64) echo -n arm64 ;; *) echo -n $(uname -m) ;; esac) &&
          export OS=$(uname | awk '{print tolower($0)}') &&
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/v1.15.0/operator-sdk_${OS}_${ARCH} &&
          chmod +x operator-sdk_${OS}_${ARCH} && sudo mv operator-sdk_${OS}_${ARCH} /usr/local/bin/operator-sdk

      - name: Set up the repo
        run: |
          git config user.name 'artemiscloud-bot'
          git config user.email 'bot@artemiscloud.io'
          git push

      - name: Update version
        if: ${{ inputs.update_version }}
        run: |
          CURRENT_VERSION=$(grep -m 1 -oP '(?<=Version = ")[^"]+' version/version.go)
          IFS=. read CURRENT_VERSION_MAJOR CURRENT_VERSION_MINOR CURRENT_VERSION_PATCH <<< ${CURRENT_VERSION}
          IFS=. read VERSION_MAJOR VERSION_MINOR VERSION_PATCH <<< ${{ inputs.version }}
          VERSION_MAJOR=${VERSION_MAJOR/\*/${CURRENT_VERSION_MAJOR}} && VERSION_MAJOR=${VERSION_MAJOR/+/$((CURRENT_VERSION_MAJOR+1))}
          VERSION_MINOR=${VERSION_MINOR/\*/${CURRENT_VERSION_MINOR}} && VERSION_MINOR=${VERSION_MINOR/+/$((CURRENT_VERSION_MINOR+1))}
          VERSION_PATCH=${VERSION_PATCH/\*/${CURRENT_VERSION_PATCH}} && VERSION_PATCH=${VERSION_PATCH/+/$((CURRENT_VERSION_PATCH+1))}
          VERSION="${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"
          sed -i "s~Version = \"${CURRENT_VERSION}\"~Version = \"${VERSION}\"~" version/version.go
          sed -i "s~PriorVersion =.*~PriorVersion = \"${CURRENT_VERSION}\"~" version/version.go
          sed -i "s~VERSION ?=.*~VERSION ?= ${VERSION}~" Makefile
          sed -i "s~OPERATOR_VERSION :=.*~OPERATOR_VERSION := ${VERSION}~" Makefile
          make generate-deploy && make bundle && git status
          git commit --all --message "Update version to ${VERSION}" || echo "nothing to commit"

      - name: Push commits
        run: |
          git push

      - name: Trigger release
        if: ${{ inputs.trigger_release }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'release.yml',
              ref: context.ref,
            });
